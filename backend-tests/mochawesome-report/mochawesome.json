{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-05-10T14:33:33.981Z",
    "end": "2021-05-10T14:33:34.678Z",
    "duration": 697,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9bce7a27-5a97-453c-9362-0b7858ddc752",
      "title": "",
      "fullFile": "cypress/integration/backend-test.spec.js",
      "file": "cypress/integration/backend-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b50bee35-0e83-404c-b113-05a5557ea884",
          "title": "testing auth",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "tc-create then edit room",
              "fullTitle": "testing auth tc-create then edit room",
              "timedOut": null,
              "duration": 672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.authenticateSession().then(response => {\n  const payload = {\n    \"features\": [\"balcony\", \"sea_view\"],\n    \"category\": \"double\",\n    \"number\": \"5113\",\n    \"floor\": \"6\",\n    \"available\": true,\n    \"price\": \"4590\"\n  };\n  const payloadChange = {\n    \"features\": [\"balcony\", \"sea_view\"],\n    \"category\": \"double\",\n    \"number\": \"5113\",\n    \"floor\": \"6\",\n    \"available\": false,\n    \"price\": \"5590\"\n  };\n  cy.request({\n    method: \"POST\",\n    url: NEW_ROOM_URL,\n    headers: {\n      'X-User-Auth': JSON.stringify(Cypress.env().loginToken),\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  }).then(response => {\n    cy.log(response.body.id);\n    let roomId = response.body.id; //let roomId = response.body[response.body.length -1].id\n    cy.request({\n      method: \"PUT\",\n      url: ROOM_URL + roomId,\n      headers: {\n        'X-User-Auth': JSON.stringify(Cypress.env().loginToken),\n        'Content-Type': 'application/json'\n      },\n      body: payloadChange\n    }).then(response => {\n      const responseCategory = JSON.stringify(response.body.category);\n      expect(responseCategory).to.have.string(payloadChange.category);\n      const responseNumber = JSON.stringify(response.body.number);\n      expect(responseNumber).to.have.string(payloadChange.number);\n      const responseFloor = JSON.stringify(response.body.floor);\n      expect(responseFloor).to.have.string(payloadChange.floor);\n      const responseAvailable = JSON.stringify(response.body.available);\n      expect(responseAvailable).to.have.string(payloadChange.available);\n      const responsePrice = JSON.stringify(response.body.price);\n      expect(responsePrice).to.have.string(payloadChange.price);\n      const responseFeatures = response.body.features;\n      expect(responseFeatures).to.deep.equal(payloadChange.features);\n      cy.request({\n        method: \"POST\",\n        url: LOGOUT_URL,\n        headers: {\n          'X-User-Auth': JSON.stringify(Cypress.env().loginToken),\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        expect(response.body).to.equal('OK');\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "c87db3c1-377f-421b-9e85-b6ae1bed22e0",
              "parentUUID": "b50bee35-0e83-404c-b113-05a5557ea884",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c87db3c1-377f-421b-9e85-b6ae1bed22e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}